<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[与HTML的初相遇]]></title>
    <url>%2F2018%2F03%2F03%2F%E4%B8%8EHTML%E7%9A%84%E5%88%9D%E7%9B%B8%E9%81%87%2F</url>
    <content type="text"><![CDATA[1.W3C 简介 万维网联盟（World Wide Web Consortium，W3C），又称W3C理事会，是万维网的主要国际标准组织， 由蒂姆·伯纳斯-李于1994年10月离开欧洲核子研究中心（CERN）后成立 2.MDN 简介 MDN Web Docs（旧称Mozilla Developer Network、Mozilla Developer Center，简称MDN）是一个汇集众多Mozilla基金会产品和网络技术开发文档的免费网站 3.HTML 所有标签列表 参考 HTML5 标签列表 1.根元素 Element Description 代表 HTML 或 XHTML 文档的根。其他所有元素必须是这个元素的子节点。 2.文档元数据 Element Description 代表关于文档元数据的一个集合，包括脚本或样式表的链接或内容。 定义文档的标题，将显示在浏览器的标题栏或标签页上。该元素只能包含文本，包含的标签不会被解释。 定义页面上相对 URL 的基准 URL。 用于链接外部的 CSS 到该文档。 定义其他 HTML 元素无法描述的元数据。 用于内联 CSS。 3.脚本 Element Description 定义一个内联脚本或链接到外部脚本。脚本语言是 JavaScript。 定义当浏览器不支持脚本时显示的替代文字。 (5) 通过 JavaScript 在运行时实例化内容的容器。 4.章节 Element Description 代表 HTML 文档的内容。在文档中只能有一个 &lt;body&gt; 元素。 (5) 定义文档中的一个章节。 (5) 定义只包含导航链接的章节。 (5) 定义可以独立于内容其余部分的完整独立内容块。 (5) 定义和页面内容关联度较低的内容——如果被删除，剩下的内容仍然很合理。 ~ 标题元素实现了六层文档标题，&lt;h1&gt; 是最大的标题，&lt;h6&gt; 是最小的标题。标题元素简要地描述章节的主题。 (5) 定义页面或章节的头部。它经常包含 logo、页面标题和导航性的目录。 (5) 定义页面或章节的尾部。它经常包含版权信息、法律信息链接和反馈建议用的地址。 定义包含联系信息的一个章节。 (5) 定义文档中主要或重要的内容。 5.组织内容 Element Description 定义一个段落。 代表章节、文章或其他长内容中段落之间的分隔符。 代表其内容已经预先排版过，格式应当保留 。 代表引用自其他来源的内容。 定义一个有序列表。 定义一个无序列表。 定义列表中的一个列表项。 定义一个定义列表（一系列术语和其定义）。 代表一个由下一个 &lt;dd&gt; 定义的术语。 代表出现在它之前术语的定义。 (5) 代表一个和文档有关的图例。 (5) 代表一个图例的说明。 代表一个通用的容器，没有特殊含义。 6.文字形式 Element Description 代表一个链接到其他资源的超链接 。 代表强调 文字。 代表特别重要 文字。 代表注释 ，如免责声明、版权声明等，对理解文档不重要。 代表不准确或不相关 的内容。 代表作品标题 。 代表内联的引用 。 代表一个术语包含在其最近祖先内容中的定义 。 代表省略 或缩写 ，其完整内容在 title 属性中。 (5) 关联一个内容的机器可读的等价形式 （该元素只在 WHATWG 版本的 HTML 标准中，不在 W3C 版本的 HTML5 标准中）。 (5) 代表日期 和时间 值；机器可读的等价形式通过 datetime 属性指定。 代表计算机代码 。 代表代码中的变量 。 代表程序或电脑的输出 。 代表用户输入 ，一般从键盘输出，但也可以代表其他输入，如语音输入。 , 分别代表下标 和上标 。 代表一段不同性质 的文字，如技术术语、外文短语等。 代表一段需要被关注 的文字。 代表一段需要下划线呈现的文本注释，如标记出拼写错误的文字等。 (5) 代表一段需要被高亮的引用 文字。 (5) 代表被ruby 注释 标记的文本，如中文汉字和它的拼音。 (5) 代表ruby 注释 ，如中文拼音。 (5) 代表 ruby 注释两边的额外插入文本 ，用于在不支持 ruby 注释显示的浏览器中提供友好的注释显示。 (5) 代表需要脱离 父元素文本方向的一段文本。它允许嵌入一段不同或未知文本方向格式的文本。 指定子元素的文本方向 ，显式地覆盖默认的文本方向。 代表一段没有特殊含义的文本，当其他语义元素都不适合文本时候可以使用该元素。 代表换行 。 (5) 代表建议换行 (Word Break Opportunity) ，当文本太长需要换行时将会在此处添加换行符。 7.编辑 Element Description 定义增加 到文档的内容。 定义从文档移除 的内容。 8.嵌入内容 Element Description 代表一张图片 。 代表一个内联的框架 。 (5) 代表一个嵌入 的外部资源，如应用程序或交互内容。 代表一个外部资源 ，如图片、HTML 子文档、插件等。 代表 &lt;object&gt; 元素所指定的插件的参数 。 (5) 代表一段视频 及其视频文件和字幕，并提供了播放视频的用户界面。 (5) 代表一段声音 ，或音频流 。 (5) 为 &lt;video&gt; 或 &lt;audio&gt; 这类媒体元素指定媒体源 。 (5) 为 &lt;video&gt; 或 &lt;audio&gt; 这类媒体元素指定文本轨道（字幕） 。 (5) 代表位图区域 ，可以通过脚本在它上面实时呈现图形，如图表、游戏绘图等。 与 &lt;area&gt; 元素共同定义图像映射 区域。 与 &lt;map&gt; 元素共同定义图像映射 区域。 (5) 定义一个嵌入式矢量图 。 (5) 定义一段数学公式 。 9.表格 Element Description 定义多维数据 。 代表表格的标题 。 代表表格中一组单列或多列 。 代表表格中的列 。 代表表格中一块具体数据 （表格主体）。 代表表格中一块列标签 （表头）。 代表表格中一块列摘要 （表尾）。 代表表格中的行 。 代表表格中的单元格 。 代表表格中的头部单元格 。 10.表单 Element Description 代表一个表单 ，由控件组成。 代表控件组 。 代表 &lt;fieldset&gt; 控件组的标题 。 代表表单控件的标题 。 代表允许用户编辑数据的数据区 （文本框、单选框、复选框等）。 代表按钮 。 代表下拉框 。 (5) 代表提供给其他控件的一组预定义选项 。 代表一个选项分组 。 代表一个 &lt;select&gt; 元素或 &lt;datalist&gt; 元素中的一个选项 代表多行文本框 。 (5) 代表一个密钥对生成器 控件。 (5) 代表计算值 。 (5) 代表进度条 。 (5) 代表滑动条 。 11.交互元素 Element Description (5) 代表一个用户可以(点击)获取额外信息或控件的小部件 。 (5) 代表 &lt;details&gt; 元素的综述 或标题 。 (5) 代表一个用户可以点击的菜单项。 (5) 代表菜单。 4.什么是空标签 ==标签和元素是不等价的，标签构成了HTML元素，如&lt;p&gt;这就是一个标签； &lt;p&gt;这里是内容&lt;/p&gt;这就是一个元素，也就是说元素由一个开始的标签和结束的标签组成，用来包含某些内容； 这里有一个值得注意的例外，即&lt;br/&gt;本身既是开始标签也是结束标签，但不包含任何内容，所以这只是个标签。总之，元素和标签的区别也不必太在意，实际工作中我们都直接以标签统称。== 回答这个问题之前，你必须明白什么是HTML元素： 指从start tag 到 end tag和其中所有代码，即三部分——开始标签，子节点，结束标签 那么空元素是啥意思？ 一个不可能存在子节点（例如内嵌的元素或者元素内的文本）的元素 那么空标签就是？ 既是开始标签又是结束标签，如 &lt;br&gt; 在 HTML 中，通常在一个空元素上使用一个闭标签是无效的。例如， &lt;input type=&quot;text&quot;&gt;&lt;/input&gt; 的闭标签是无效的 HTML。 那么，在HTML中有哪些空元素呢？ 常见的有 &lt;br&gt;、 &lt;hr&gt; 、 &lt;img&gt; 、 &lt;input&gt; 、 &lt;link&gt; 、 &lt;meta&gt; 剩下的参考 空元素 参考资料： HTML中的标签和元素的区别详解 HTML空元素 空元素 5.什么是可替换标签 CSS 里，可替换元素（replaced element）的展现不是由CSS来控制的。这些元素是一类 外观渲染独立于CSS的 外部对象。 典型的可替换元素有 &lt;img&gt;、 &lt;object&gt;、 &lt;video&gt; 和 表单元素，如&lt;textarea&gt;、 &lt;input&gt; 。 直白一点说就是，浏览器会根据元素的标签和属性，来决定元素的具体显示内容。如 &lt;img&gt;的内容来自于其属性 src。它们就像是个空标签 同理，对于不可替换元素，即其内容直接表现给用户端（例如浏览器），如 &lt;p&gt;段落的内容&lt;/p&gt; 参考： 可替换元素和非可替换元素 可替换元素]]></content>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Hexo搭建一个博客系统]]></title>
    <url>%2F2018%2F02%2F21%2F%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开博大吉]]></title>
    <url>%2F2018%2F02%2F21%2F%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89%2F</url>
    <content type="text"></content>
      <tags>
        <tag>None</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F02%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
